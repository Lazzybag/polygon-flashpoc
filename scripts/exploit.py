from brownie import accounts, interface, FlashMath, network
PAIR="0x1dD4eF886d34C2C3b5C5D3B1f1E8A4B5C6D7E8f9"; DAI="0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063"
USDC="0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"; VAULT="0xBA12222222228d8Ba445958a75a0704d566BF2C8"
RICH="0x1a13F74Ca1db81f94A9AFbdef88AB9b1A1f7140c"
def main():
    me=accounts.at(RICH,force=True); lib=FlashMath.deploy({"from":me})
    dai=interface.IERC20(DAI); usdc=interface.IERC20(USDC); pair=interface.IUniswapV2Pair(PAIR)
    r0,r1,_=pair.getReserves(); t0=pair.token0()
    rDAI,rWETH=(r0,r1) if t0.lower()==DAI.lower() else (r1,r0)
    print("Before ➜ DAI:%.2f WETH:%.4f"%(rDAI/1e18,rWETH/1e18))
    flash=30_000*1e18; vault=interface.IVault(VAULT)
    tx=vault.flashLoan(me,[DAI],[flash],b'',{"from":me})
    endUSDC=usdc.balanceOf(RICH)/1e6; profit=endUSDC-30_000*0.999
    print("After  ➜ USDC profit: %.2f  (gas %d)"%(profit,tx.gas_used))
